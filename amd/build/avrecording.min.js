define("qtype_recordrtc/avrecording",["exports","core/log","core/modal_factory","core/templates"],(function(_exports,_log,_modal_factory,_templates){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.addPlaybackErrorHandlingToVideoElements=function(questionId){const questionDiv=document.getElementById(questionId),mediaElements=questionDiv.querySelectorAll(".qtype_recordrtc-screen-widget, .qtype_recordrtc-video-widget");if(!Array.prototype.some.call(mediaElements,(media=>null!==media.querySelector('video:not([data-source=""])'))))return;_templates.default.renderForPromise("core/notification_error",{closebutton:!0,announce:!0,message:questionDiv.querySelector(".qtype_recordrtc-video-widget, .qtype_recordrtc-screen-widget").dataset.errorMessage}).then((_ref=>{let{html:html}=_ref;mediaElements.forEach((widget=>{const videoElement=widget.querySelector("video");if(""===videoElement.dataset.source)return;const buttonElement=widget.querySelector("button.qtype_recordrtc-main-button[disabled]"),sourceElement=document.createElement("source");sourceElement.addEventListener("error",(()=>{_templates.default.appendNodeContents(widget.querySelector(".qtype_recordrtc-media-player"),html,""),buttonElement&&(buttonElement.disabled=!1)})),videoElement.addEventListener("loadeddata",(()=>{videoElement.classList.remove("d-none"),buttonElement&&(buttonElement.disabled=!1)})),sourceElement.setAttribute("src",videoElement.dataset.source),videoElement.appendChild(sourceElement)}))})).catch((error=>{_log.default.debug("Could not load error template"),_log.default.debug(error)}))},_exports.init=function(questionId,settings){M.util.js_pending("init-"+questionId),new RecordRtcQuestion(questionId,settings),M.util.js_complete("init-"+questionId)},_log=_interopRequireDefault(_log),_modal_factory=_interopRequireDefault(_modal_factory),_templates=_interopRequireDefault(_templates);var _systemImportTransformerGlobalIdentifier="undefined"!=typeof window?window:"undefined"!=typeof self?self:"undefined"!=typeof global?global:{};function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function Recorder(widget,mediaSettings,owner,uploadInfo){const recorder=this;let progressBarAnimation,mediaStream=null,mediaRecorder=null,chunks=[],bytesRecordedSoFar=0,timeRemaining=0,stopTime=0,countdownTicker=0;const button=widget.querySelector("button.qtype_recordrtc-main-button"),pauseButton=widget.querySelector(".qtype_recordrtc-pause-button button"),controlRow=widget.querySelector(".qtype_recordrtc-control-row"),mediaElement=widget.querySelector(".qtype_recordrtc-media-player "+("screen"===mediaSettings.name?"video":mediaSettings.name)),noMediaPlaceholder=widget.querySelector(".qtype_recordrtc-no-recording-placeholder"),timeDisplay=widget.querySelector(".qtype_recordrtc-time-left"),progressBar=widget.querySelector(".qtype_recordrtc-time-left .qtype_recordrtc-timer-front"),backTimeEnd=widget.querySelector(".qtype_recordrtc-time-left .qtype_recordrtc-timer-back span.timer-end"),backtimeStart=widget.querySelector(".qtype_recordrtc-time-left .qtype_recordrtc-timer-back span.timer-start"),frontTimeEnd=widget.querySelector(".qtype_recordrtc-time-left .qtype_recordrtc-timer-front span.timer-end"),fronttimeStart=widget.querySelector(".qtype_recordrtc-time-left .qtype_recordrtc-timer-front span.timer-start");function combineAudioAndScreenRecording(results){const[audioData,screenData]=results;if("fulfilled"!==screenData.status)return void handleCaptureFailed(screenData.reason);const screenStream=screenData.value;if(screenStream.getVideoTracks()[0].addEventListener("ended",handleStopSharing),"fulfilled"!==audioData.status)return _log.default.debug("Could not capture audio. Continuing without. Reason: "+audioData.reason),void handleCaptureStarting(screenStream);const audioStream=audioData.value,composedStream=new MediaStream;screenStream.getTracks().forEach((function(track){"video"===track.kind?composedStream.addTrack(track):track.stop()})),audioStream.getAudioTracks().forEach((function(micTrack){composedStream.addTrack(micTrack)})),handleCaptureStarting(composedStream)}function handleCaptureStarting(stream){switch(mediaStream=stream,mediaElement.srcObject=stream,mediaElement.muted=!0,mediaSettings.name){case"audio":startSaving(),button.disabled=!1,button.focus();break;case"video":mediaElement.play(),mediaElement.controls=!1,widget.dataset.state="starting",setButtonLabel("startrecording"),button.disabled=!1,button.focus(),widget.querySelector(".qtype_recordrtc-stop-button").disabled=!1;break;case"screen":mediaElement.play(),mediaElement.controls=!1,startSaving(),widget.querySelector(".qtype_recordrtc-stop-button").disabled=!1}pauseButton&&(pauseButton.disabled=!1)}function startSaving(){mediaRecorder=new MediaRecorder(mediaStream,function(){const options={};if("audio"===mediaSettings.name)options.audioBitsPerSecond=mediaSettings.bitRate;else if("video"===mediaSettings.name||"screen"===mediaSettings.name){options.videoBitsPerSecond=mediaSettings.bitRate,options.videoWidth=mediaSettings.width,options.videoHeight=mediaSettings.height;for(let i=0;i<mediaSettings.mimeTypes.length;i++)if(MediaRecorder.isTypeSupported(mediaSettings.mimeTypes[i])){options.mimeType=mediaSettings.mimeTypes[i];break}}return options}()),mediaRecorder.ondataavailable=handleDataAvailable,mediaRecorder.onpause=handleDataAvailable,mediaRecorder.onstop=handleRecordingHasStopped,mediaRecorder.start(1e3),widget.dataset.state="recording",progressBarAnimation=progressBar.animate([{clipPath:"inset(0 0 0 0%)"},{clipPath:"inset(0 0 0 100%)"}],{duration:1e3*widget.dataset.maxRecordingDuration,fill:"forwards",delay:0}),progressBarAnimation.play(),setButtonLabel("stoprecording"),timeRemaining=1e3*widget.dataset.maxRecordingDuration,resumeCountdownTimer(),updateTimerDisplay(),"video"!==mediaSettings.name&&"screen"!==mediaSettings.name||(button.parentElement.classList.add("hide"),controlRow.classList.remove("hide"),controlRow.classList.add("d-flex"),timeDisplay.classList.remove("hide"))}function handleStopSharing(){if("starting"===widget.dataset.state)widget.dataset.state="new",mediaElement.parentElement.classList.add("hide"),noMediaPlaceholder.classList.remove("hide"),setButtonLabel("startsharescreen"),button.blur();else{const controlEl=widget.querySelector(".qtype_recordrtc-control-row");controlEl.classList.contains("hide")||controlEl.querySelector(".qtype_recordrtc-stop-button").click()}enableAllButtons()}function handleDataAvailable(event){event.data&&(bytesRecordedSoFar+=event.data.size,uploadInfo.maxUploadSize>=0&&bytesRecordedSoFar>=uploadInfo.maxUploadSize&&(localStorage.getItem("alerted")?localStorage.removeItem("alerted"):(localStorage.setItem("alerted","true"),stopRecording(),owner.showAlert("nearingmaxsize"))),chunks.push(event.data),void 0===M.core_formchangechecker||window.location.pathname.endsWith("/question/bank/previewquestion/preview.php")||M.core_formchangechecker.set_form_changed())}function stopRecording(){button.disabled=!0,stopCountdownTimer(),button.classList.remove("btn-danger"),button.classList.add("btn-outline-danger"),pauseButton&&(setPauseButtonLabel("pause"),pauseButton.parentElement.classList.add("hide")),progressBarAnimation.cancel(),mediaRecorder.stop();const tracks=mediaStream.getTracks();for(let i=0;i<tracks.length;i++)tracks[i].stop()}function handleRecordingHasStopped(){if("new"===widget.dataset.state)return;const blob=new Blob(chunks,{type:mediaRecorder.mimeType});mediaElement.srcObject=null,mediaElement.src=URL.createObjectURL(blob),mediaElement.muted=!1,mediaElement.controls=!0,mediaElement.parentElement.classList.remove("hide"),noMediaPlaceholder.classList.add("hide"),mediaElement.focus(),"audio"===mediaSettings.name?timeDisplay.classList.add("hide"):(button.parentElement.classList.remove("hide"),controlRow.classList.add("hide"),controlRow.classList.remove("d-flex")),button.disabled=!0,button.classList.remove("btn-danger"),button.classList.add("btn-outline-danger"),widget.dataset.state="recorded",chunks.length>0&&owner.notifyRecordingComplete(recorder)}function handleCaptureFailed(error){_log.default.debug("Audio/video/screen question: error received"),_log.default.debug(error),setPlaceholderMessage("recordingfailed"),setButtonLabel("recordagainx"),button.classList.remove("btn-danger"),button.classList.add("btn-outline-danger"),widget.dataset.state="new",timeDisplay.classList.add("hide"),mediaRecorder&&"inactive"!==mediaRecorder.state&&mediaRecorder.stop();const stringName="gum"+error.name.replace("Error","").toLowerCase();owner.showAlert(stringName),enableAllButtons()}function stopCountdownTimer(){timeRemaining=stopTime-Date.now(),0!==countdownTicker&&(clearInterval(countdownTicker),countdownTicker=0)}function resumeCountdownTimer(){stopTime=Date.now()+timeRemaining,0===countdownTicker&&(countdownTicker=setInterval(updateTimerDisplay,100))}function updateTimerDisplay(){const millisecondsRemaining=stopTime-Date.now(),secondsRemaining=Math.round(millisecondsRemaining/1e3);setLabelForTimer(widget.dataset.maxRecordingDuration-secondsRemaining,secondsRemaining),millisecondsRemaining<=0&&stopRecording()}function getTimeLabelForTimer(seconds){const secs=seconds%60,mins=Math.round((seconds-secs)/60);return M.util.get_string("timedisplay","qtype_recordrtc",{mins:pad(mins),secs:pad(secs)})}function setLabelForTimer(secondsStart,secondsRemaining){backTimeEnd.innerText=getTimeLabelForTimer(secondsRemaining),backtimeStart.innerText=getTimeLabelForTimer(secondsStart),frontTimeEnd.innerText=getTimeLabelForTimer(secondsRemaining),fronttimeStart.innerText=getTimeLabelForTimer(secondsStart)}function pad(val){const valString=val+"";return valString.length<2?"0"+valString:""+valString}function fetchOggData(sourceUrl,responseType){return new Promise((resolve=>{const fetchRequest=new XMLHttpRequest;fetchRequest.open("GET",sourceUrl),fetchRequest.responseType=responseType,fetchRequest.addEventListener("load",(()=>{resolve(fetchRequest.response)})),fetchRequest.send()}))}async function setPreparingPercent(current,total){setButtonLabel("uploadpreparingpercent",Math.round(100*current/total)),await new Promise((resolve=>requestAnimationFrame(resolve)))}function uploadBlobToRepository(blob,recordingFilename){const formData=new FormData;formData.append("repo_upload_file",blob,recordingFilename),formData.append("sesskey",M.cfg.sesskey),formData.append("repo_id",uploadInfo.uploadRepositoryId),formData.append("itemid",uploadInfo.draftItemId),formData.append("savepath","/"),formData.append("ctx_id",uploadInfo.contextId),formData.append("overwrite","1");const uploadRequest=new XMLHttpRequest;uploadRequest.addEventListener("readystatechange",handleUploadReadyStateChanged),uploadRequest.upload.addEventListener("progress",handleUploadProgress),uploadRequest.addEventListener("error",handleUploadError),uploadRequest.addEventListener("abort",handleUploadAbort),uploadRequest.open("POST",M.cfg.wwwroot+"/repository/repository_ajax.php?action=upload"),uploadRequest.send(formData)}function handleUploadReadyStateChanged(e){const uploadRequest=e.target;if(4!==uploadRequest.readyState)return;JSON.parse(uploadRequest.responseText).errorcode&&handleUploadError(),200===uploadRequest.status?(setButtonLabel("recordagainx"),button.classList.remove("btn-outline-danger"),enableAllButtons()):404===uploadRequest.status&&(setPlaceholderMessage("uploadfailed404"),enableAllButtons())}function handleUploadProgress(e){setButtonLabel("uploadprogress",Math.round(e.loaded/e.total*100)+"%")}function handleUploadError(){setPlaceholderMessage("uploadfailed"),enableAllButtons()}function handleUploadAbort(){setPlaceholderMessage("uploadaborted"),enableAllButtons()}function setButtonLabel(langString,a){void 0===a&&(a='<span class="sr-only">&nbsp;'+widget.dataset.widgetName+"</span>"),button.innerHTML=M.util.get_string(langString,"qtype_recordrtc",a)}function setPauseButtonLabel(langString){pauseButton.innerText=M.util.get_string(langString,"qtype_recordrtc")}function setPlaceholderMessage(langString){noMediaPlaceholder.textContent=M.util.get_string(langString,"qtype_recordrtc"),mediaElement.parentElement.classList.add("hide"),noMediaPlaceholder.classList.remove("hide")}function enableAllButtons(){disableOrEnableButtons(!0),owner.notifyButtonStatesChanged()}function disableOrEnableButtons(){let enabled=arguments.length>0&&void 0!==arguments[0]&&arguments[0];document.querySelectorAll(".que.recordrtc").forEach((record=>{record.querySelectorAll("button, input[type=submit], input[type=button]").forEach((button=>{button.disabled=!enabled}))}))}function toggleProgressbarState(){"running"===(progressBarAnimation.playState||"running")?progressBarAnimation.pause():progressBarAnimation.play()}widget.addEventListener("click",(function(e){const clickedButton=e.target.closest("button");if(!clickedButton||clickedButton.classList.contains("close"))return;switch(e.preventDefault(),widget.dataset.state){case"new":case"recorded":!function(){const errorMessage=widget.querySelector(".alert.alert-block");errorMessage&&errorMessage.remove();const videoElement=widget.querySelector("video");videoElement&&videoElement.classList.contains("d-none")&&videoElement.classList.remove("d-none");setLabelForTimer(0,parseInt(widget.dataset.maxRecordingDuration)),"audio"===mediaSettings.name?(mediaElement.parentElement.classList.add("hide"),noMediaPlaceholder.classList.add("hide"),timeDisplay.classList.remove("hide")):(mediaElement.parentElement.classList.remove("hide"),noMediaPlaceholder.classList.add("hide"));if(null==pauseButton||pauseButton.parentElement.classList.remove("hide"),button.classList.remove("btn-outline-danger"),button.classList.add("btn-danger"),function(){disableOrEnableButtons(!1)}(),chunks=[],bytesRecordedSoFar=0,"screen"!==mediaSettings.name)return void navigator.mediaDevices.getUserMedia(mediaSettings.mediaConstraints).then(handleCaptureStarting).catch(handleCaptureFailed);const audioPromise=navigator.mediaDevices.getUserMedia({audio:!0}),screenPromise=navigator.mediaDevices.getDisplayMedia(mediaSettings.mediaConstraints);Promise.allSettled([audioPromise,screenPromise]).then(combineAudioAndScreenRecording)}();break;case"starting":startSaving();break;case"recording":clickedButton===pauseButton?(stopCountdownTimer(),setPauseButtonLabel("resume"),mediaRecorder.pause(),widget.dataset.state="paused",toggleProgressbarState()):stopRecording();break;case"paused":clickedButton===pauseButton?(resumeCountdownTimer(),widget.dataset.state="recording",setPauseButtonLabel("pause"),mediaRecorder.resume(),toggleProgressbarState()):stopRecording()}})),this.uploadMediaToServer=async function(){if(setButtonLabel("uploadpreparing"),widget.dataset.convertToMp3){const mp3DataBlob=await async function(sourceUrl){const lamejs=await async function(){return await("function"==typeof _systemImportTransformerGlobalIdentifier.define&&_systemImportTransformerGlobalIdentifier.define.amd?new Promise((function(resolve,reject){_systemImportTransformerGlobalIdentifier.require([M.cfg.wwwroot+"/question/type/recordrtc/js/lamejs@1.2.1a-7-g582bbba/lame.min.js"],resolve,reject)})):"undefined"!=typeof module&&module.exports&&"undefined"!=typeof require||"undefined"!=typeof module&&module.component&&_systemImportTransformerGlobalIdentifier.require&&"component"===_systemImportTransformerGlobalIdentifier.require.loader?Promise.resolve(require(M.cfg.wwwroot+"/question/type/recordrtc/js/lamejs@1.2.1a-7-g582bbba/lame.min.js")):Promise.resolve(_systemImportTransformerGlobalIdentifier[M.cfg.wwwroot+"/question/type/recordrtc/js/lamejs@1.2.1a-7-g582bbba/lame.min.js"]))}(),oggData=await fetchOggData(sourceUrl,"arraybuffer"),audioBuffer=await(new AudioContext).decodeAudioData(oggData),[left,right]=function(audioIn){const channelData=[];for(let channel=0;channel<audioIn.numberOfChannels;channel++){const rawChannelData=audioIn.getChannelData(channel);channelData[channel]=new Int16Array(audioIn.length);for(let i=0;i<audioIn.length;i++)channelData[channel][i]=32767*rawChannelData[i]}return channelData}(audioBuffer);return await async function(lamejs,channels,sampleRate,left){let right=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;const buffer=[],mp3enc=new lamejs.Mp3Encoder(channels,sampleRate,mediaSettings.bitRate/1e3);let remaining=left.length;const samplesPerFrame=1152;let mp3buf;await setPreparingPercent(0,left.length);for(let i=0;remaining>=samplesPerFrame;i+=samplesPerFrame){if(1===channels){const mono=left.subarray(i,i+samplesPerFrame);mp3buf=mp3enc.encodeBuffer(mono)}else{const leftChunk=left.subarray(i,i+samplesPerFrame),rightChunk=right.subarray(i,i+samplesPerFrame);mp3buf=mp3enc.encodeBuffer(leftChunk,rightChunk)}mp3buf.length>0&&buffer.push(mp3buf),remaining-=samplesPerFrame,i%(10*samplesPerFrame)==0&&await setPreparingPercent(i,left.length)}const d=mp3enc.flush();d.length>0&&buffer.push(new Int8Array(d));return await setPreparingPercent(left.length,left.length),new Blob(buffer,{type:"audio/mp3"})}(lamejs,audioBuffer.numberOfChannels,audioBuffer.sampleRate,left,right)}(mediaElement.src);mediaElement.src=URL.createObjectURL(mp3DataBlob),uploadBlobToRepository(mp3DataBlob,widget.dataset.recordingFilename.replace(/\.ogg$/,".mp3"))}else{uploadBlobToRepository(await fetchOggData(mediaElement.src,"blob"),widget.dataset.recordingFilename)}}}function AudioSettings(bitRate){this.name="audio",this.bitRate=parseInt(bitRate,10),this.mediaConstraints={audio:!0},this.mimeTypes=["audio/webm;codecs=opus","audio/ogg;codecs=opus"]}function VideoSettings(bitRate,width,height){this.name="video",this.bitRate=parseInt(bitRate,10),this.width=parseInt(width,10),this.height=parseInt(height,10),this.mediaConstraints={audio:!0,video:{width:{ideal:this.width},height:{ideal:this.height}}},this.mimeTypes=["video/webm;codecs=vp9,opus","video/webm;codecs=h264,opus","video/webm;codecs=vp8,opus"]}function ScreenSettings(bitRate,width,height){this.name="screen",this.bitRate=parseInt(bitRate,10),this.width=parseInt(width,10),this.height=parseInt(height,10),this.mediaConstraints={audio:!0,systemAudio:"exclude",video:{displaySurface:"monitor",frameRate:{ideal:24},width:{max:this.width},height:{max:this.height}}},this.mimeTypes=["video/webm;codecs=vp8,opus","video/webm;codecs=vp9,opus","video/webm;codecs=h264,opus"]}function RecordRtcQuestion(questionId,settings){const questionDiv=document.getElementById(questionId),result=navigator.mediaDevices&&window.MediaRecorder?"https:"===location.protocol||"localhost"===location.host||"127.0.0.1"===location.host?"ok":"nothttps":"nowebrtc";if("nothttps"===result)return void questionDiv.querySelector(".https-warning").classList.remove("hide");if("nowebrtc"===result)return void questionDiv.querySelector(".no-webrtc-warning").classList.remove("hide");this.showAlert=function(subject){return _modal_factory.default.create({type:_modal_factory.default.types.ALERT,title:M.util.get_string(subject+"_title","qtype_recordrtc"),body:M.util.get_string(subject,"qtype_recordrtc")}).then((function(modal){return modal.show(),modal}))},this.notifyRecordingComplete=function(recorder){recorder.uploadMediaToServer()},this.notifyButtonStatesChanged=setSubmitButtonState;const thisQuestion=this;function setSubmitButtonState(){let anyRecorded=!1;questionDiv.querySelectorAll(".qtype_recordrtc-audio-widget, .qtype_recordrtc-video-widget, .qtype_recordrtc-screen-widget").forEach((function(widget){"recorded"===widget.dataset.state&&(anyRecorded=!0)}));const submitButton=questionDiv.querySelector(".im-controls .submit[type=submit]");submitButton&&(submitButton.disabled=!anyRecorded)}questionDiv.querySelectorAll(".qtype_recordrtc-audio-widget, .qtype_recordrtc-video-widget, .qtype_recordrtc-screen-widget").forEach((function(widget){let typeInfo;switch(widget.dataset.mediaType){case"audio":typeInfo=new AudioSettings(settings.audioBitRate);break;case"screen":typeInfo=new ScreenSettings(settings.screenBitRate,settings.screenWidth,settings.screenHeight);break;default:typeInfo=new VideoSettings(settings.videoBitRate,settings.videoWidth,settings.videoHeight)}return new Recorder(widget,typeInfo,thisQuestion,settings),"Not used"})),setSubmitButtonState()}}));

//# sourceMappingURL=avrecording.min.js.map